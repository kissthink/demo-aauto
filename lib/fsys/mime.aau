//mime 多用途扩展文件类型
namespace fsys.mime;
	
::Urlmon := ..raw.loadDll("Urlmon.dll")
FindMimeFromData = Urlmon.api("FindMimeFromData","int(pointer pBC,string url,pointer buffer,INT size,string mimeProposed,INT flags,pointer &mime,INT rsrv)" )

var fileMime  = {
    ["htm"] = "text/html";
    ["html"] = "text/html";
    ["xml"] = "text/xml";
    ["xhtml"] = "application/xhtml+xml";
    ["js"] = "application/x-javascript";
    ["txt"] = "text/plain";　
    ["rtf"] = "application/rtf";
    ["pdf"] = "application/pdf";
    ["ppt"] = "application/vnd.ms-powerpoint　";　　
    ["doc"] = "application/msword";　
    ["bmp"] = "application/x-MS-bmp";　
    ["png"] = "image/png";　
    ["gif"] = "image/gif";　
    ["jpeg"] = "image/jpeg";　
    ["jpg"] = "image/jpeg";　
    ["jpe"] = "image/jpeg";
    ["jpz"] = "image/jpeg";
    ["au"] = "audio/basic";　
    ["avi"] = "video/x-msvideo";
    ["mid"] = "audio/midi";
    ["midi"] = "audio/x-midi";　
    ["ra"] = "audio/x-pn-realaudio";
    ["ram"] = "audio/x-pn-realaudio";
    ["mpg"] = "video/mpeg";
    ["mpeg"] = "video/mpeg";
    ["mp3"] = "audio/x-mpeg";
    ["mov"] = "video/quicktime";
    ["mp4"] = "video/mp4";
    ["wmv"] = "video/x-ms-wmv";
    ["zip"] = "application/zip";
    ["gz"] = "application/x-gzip";
    ["tar"] = "application/x-tar";　
    ["taz"] = "application/x-tar";
    ["rar"] = "application/x-rar-compressed";
    ["dll"] = "application/octet-stream";
    ["exe"] = "application/octet-stream";
} 

fromData = function(buffer,flag = 0){  
	if(!#buffer)return;
	
	var hr,mime = FindMimeFromData(null,path,buffer,#buffer,null,flag,null,0);
	if( hr >= 0/*_SUCCEEDED*/ ){
		return ..string.fromUnicode(mime,,true)
	}
}

fromUrl = function(url,flag=0){ 
	if(!#url)return;
	
	var hr,mime = FindMimeFromData(null,..string.toUnicode(url) ,null,0,null,flag,null,0);
	if( hr >= 0/*_SUCCEEDED*/ ){
		return ..string.fromUnicode(mime,,true)
	}	
	else {
		var fileExt = ..string.match(url,"\.(.+)$");
		return fileExt ? fileMime[fileExt] : "application/octet-stream";
	}
	
}

fromFile = function(path,flag=0){ 
	if(!#path)return;
	
	var hr,mime = FindMimeFromData(null,..string.toUnicode(path),null,0,null,flag | 1,null,0);
	if( hr >= 0/*_SUCCEEDED*/ ){
		return ..string.fromUnicode(mime,,true)
	}
	else {
		var fileExt = ..string.match(path,"\.(.+)$");
		return fileExt ? fileMime[fileExt] : "application/octet-stream";
	}	
}
 
/**intellisense(fsys.mime)
fromData(.(字符串数据) = 获取MIME type
fromUrl(.(网址) = 获取MIME type
fromFile(.(文件路径) = 获取MIME type
end intellisense**/
