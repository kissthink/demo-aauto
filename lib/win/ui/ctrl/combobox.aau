//combobox 下拉框
import win.ui.ctrl.edit;
import win.ui.ctrl.metaProperty;
namespace win.ui.ctrl;  

class combobox{
    ctor(parent,tParam){
       if(tParam) {
       		if( (!tParam.mode) || ( tParam.mode == "dropdown" ) ){
       			tParam.bottom += 100;
				tParam.style |= 0x2/*_CBS_DROPDOWN*/
       		}
       		elseif( tParam.mode == "dropdownlist" ) {
				tParam.bottom += 100;
				tParam.style |= 0x3/*_CBS_DROPDOWNLIST*/
			}
			elseif( tParam.mode == "simple" ){
				tParam.style |= 0x1/*_CBS_SIMPLE*/              
			} 	 
			
	        if(tParam.edge) tParam.exstyle |= 0x200/*_WS_EX_CLIENTEDGE*/; 
	        
	        if( tParam.hscroll )
	        	tParam.style |= 0x40/*_CBS_AUTOHSCROLL*/;
       } 
    };
	add = function( str ){
        ::SendMessage(this.hwnd  , 0x143/*_CB_ADDSTRING*/, ,str)
    }; 
    insert = function( str,i){
    	if( i ? i>0 ) i--;
        ::SendMessage(this.hwnd  , 0x14A/*_CB_INSERTSTRING*/,topointer(i) ,str)
    };
    clear = function(){
       ::SendMessage(this.hwnd , 0x14B/*_CB_RESETCONTENT*/ )
    };
    delete = function(ind){
       if(!ind) ind=this.selIndex;
       ::SendMessage(this.hwnd , 0x144/*_CB_DELETESTRING*/, topointer(ind-1 ) )
    };
    find = function(v){//在列表框里查找指定的项
    	var  ind =  ::SendMessage(owner.hwnd ,  0x14C/*_CB_FINDSTRING*/,  ,v);  
    	return ind!=-1/*_CB_ERR*/?ind+1:0 
    };  
	findEx = function( str ){//精确查找指定的项
		var ind = ::SendMessage(this.hwnd , 0x158/*_CB_FINDSTRINGEXACT*/, , str ) ;
		return ind!=-1/*_CB_ERR*/?ind+1:0
	};
	@_metaProperty
}


combobox._metaProperty = metaProperty(
	editBox = {
		_get = function(){
			if( owner.__editbox_init__  ) return owner.__editbox__;
			var hwnd = ..win.findEx(owner.hwnd,0,"Edit");
			if(!hwnd) return;
			owner.__editbox__ = ..win.ui.ctrl.edit();
			owner.__editbox__.hwnd = hwnd;
			owner.__editbox_init__ = true;
			return owner.__editbox__;
		}
	};
	setCueBannerText = function(s,f){
		if(owner.editBox)owner.editBox.setCueBannerText(s,f);
	};
	dir = function(path,flag){
		return ::SendMessage(owner.hwnd, 0x145/*_CB_DIR*/, topointer( flag: 0 ) ,..io.fullpath(path:"/*"))  
	};
	count = {
		_get = function(){ 
			return ::SendMessage(owner.hwnd, 0x146/*_CB_GETCOUNT*/, null,null) 
		} 	
	};
	limit = { 
		_set = function( v ){ 
     		::SendMessageInt(owner[["hwnd"]], 0x141/*_CB_LIMITTEXT*/, v , 0)
		} 	
	};
	selIndex = {
		_get = function(){ 
			return ::SendMessage(owner.hwnd, 0x147/*_CB_GETCURSEL*/) + 1;
		}
		_set = function( v ){
		 	::SendMessage(owner.hwnd, 0x14E/*_CB_SETCURSEL*/, topointer(v-1) )  
	    }
	}; 
	selText = {
		_get = function(){ 
			var sel =  ::SendMessage(owner.hwnd, 0x147/*_CB_GETCURSEL*/ )
     		var len = ::SendMessage(owner.hwnd, 0x149/*_CB_GETLBTEXTLEN*/, topointer(sel)); 
     		var re ,text = ::SendMessageByString(owner.hwnd, 0x148/*_CB_GETLBTEXT*/,  sel  ,len+1);
     		return  ..string.str( text:"" )
		} 
		_set = function(v){
			var ind = ::SendMessage(owner.hwnd , 0x158/*_CB_FINDSTRINGEXACT*/, , v ) ;
			if( ind != -1){
				::SendMessageInt(owner.hwnd, 0x14E/*_CB_SETCURSEL*/,ind,0);
			} 
		}
		
	};  
	selectString = function(v,indexStart){
		::SendMessage(owner.hwnd, 0x14D/*_CB_SELECTSTRING*/,topointer( (indexStart:0)-1 ),v);
	}; 
	showDropDown = function(d){
		::SendMessageInt(owner.hwnd, 0x14F/*_CB_SHOWDROPDOWN*/,(d||d===null)?1:0,0) 
	}
	items = {
		_get = function(){ 
			var count = ::SendMessage(owner.hwnd, 0x146/*_CB_GETCOUNT*/);
			var tab = {};
			for(i=0;count-1;1){ 
				var len = ::SendMessageInt(owner.hwnd, 0x149/*_CB_GETLBTEXTLEN*/, i,0) ;  
				var ret,text  =  ::SendMessageByString(owner.hwnd , 0x148/*_CB_GETLBTEXT*/,i,len+1);

               	..table.push(tab,..string.str( text) )
            }
            
			return tab;
		}
		_set = function( v ){ 
			var cmd = owner.oncommand;
			owner.oncommand = null;
			var hwndFocus = ..win.getFocus();
			var text = owner.text;
			
			::SendMessage(owner.hwnd , 0x14B/*_CB_RESETCONTENT*/ );
			::SendMessageInt(owner.hwnd, 0x14F/*_CB_SHOWDROPDOWN*/,0,0);
			 if( type(v) == "table" ) { 
		       	for( i=1;#(v) ){
					::SendMessage(owner.hwnd , 0x143/*_CB_ADDSTRING*/, ,v[i]);  
				}
			 }
			 
			 var ed = owner.editBox; 
			 if( ed && hwndFocus == ed.hwnd ){
			 	ed.appendText(text);
			 }
			 else {
			 	::SendMessageInt(owner.hwnd, 0x14E/*_CB_SETCURSEL*/,0,0);
			 }
			 
			 owner.oncommand = cmd;
		} 	
	}
)

/***intellisense()
!combobox.editBox = 返回编辑框\n!edit.
!combobox.showDropDown(.(true) = 显示下拉列表\n参数为false隐藏下拉列表
!combobox.setCueBannerText(.（"提示文本") = 指定文本框文本为空时的显示的默认提示文本\nXP系统不支持此函数、但调用不报错
!combobox.dir(.("目录路径",_DDL_->->->) = 类似dir命令,列出指定目录下匹配的文件,支持通配符\n参数@2可指定选项,默认为 _DDL_READWRITE
!combobox.cls = 设计时类名
!combobox.className = 运行时类名
!combobox.find(__/*请输入文本*/) = 查找列表项
!combobox.items = 组合框内容
!combobox.limit = 只写属性,修改最大允许输入的文本长度,\n如果设为0,则设定为默认长度0x7FFFFFFE,\n必须在控件初始化属性中启用横向滚动条,该属性才能生效
!combobox.selText = 读取或设置组合框当前选中文本
!combobox.text = 组合框当前输入文本
!combobox.count = 列表项数目
!combobox.selIndex = 获取或指定当前选中的项
!combobox.selText = 获取或指定当前选中的文本,精确匹配
!combobox.selectString(.("文本前缀",开始索引) = 按文本前缀查找并选中项目,\n自开始索引后面开始查找,默认值为0也就是开始处搜索
!combobox.add(.("文本") = 添加到组合框,\n不支持排序
!combobox.insert(.("文本",插入位置) = 默认添加到开始处,\n-1表示添加到尾部\n支持0x100/*_CBS_SORT*/排序
!combobox.clear() = 清除组合框所有内容
!combobox.delete() = 删除当前选中项
!combobox.findEx = 精确查找指定的项\n找不到返回0 
!combobox.hwnd = 控件句柄
!combobox.id = 控件ID
!combobox._parentForm = 控件所在的父窗口(指win.form对象)\n!winform.
!combobox.getParent() = 返回父窗口\n!static.
!combobox.setParent(__/*控件对象*/) = 改变父窗口 
!combobox.hide = 控件是否隐藏
!combobox.disabled = 是否禁用
!combobox.left = 左侧坐标
!combobox.right = 右侧坐标
!combobox.top = 顶部坐标
!combobox.bottom = 底部坐标
!combobox.width = 宽度
!combobox.height = 高度
!combobox.redraw() = 刷新
!combobox.show(true__) = 显示控件
!combobox.getRect() = 控件区块位置(::RECT结构体)
!combobox.getRect(true) = 控件屏幕区块位置(::RECT结构体)  
!combobox.setRect(rc) = 设置控件区块位置(::RECT结构体)  
!combobox.setRect(rc,true) = 设置控件屏幕区块位置(::RECT结构体)
!combobox.getClientRect() =  控件客户区块位置(::RECT结构体)\n!rect.
!combobox.getFont() = 控件字体(::LOGFONT结构体)\n!logfont.
!combobox.setFont(__/*指定字体*/) = 指定LOGFONT字体对象,或逻辑字体句柄 
!combobox.setFont(混入字体属性) = @.setFont(point=10;name="宋体"); 
!combobox.theme = 外观主题,例如\nwinform.button.theme = "Explorer"\nwinform.button.theme = false
!combobox.modifyStyle(.(remove,add) = 如果指定第三个参数，则使用此参数调用::SetWidnowPos 
!combobox.modifyStyleEx(.(remove,add) = 如果指定第三个参数，则使用此参数调用::SetWidnowPos
!combobox.capture = 是否捕获全局鼠标消息
!combobox.close() = 关闭控件窗口
!combobox.invalidate(__/*可选使用::RECT()对象指定客户区*/) = 使窗口绘图区无效
!combobox.invalidate(__/*可选使用::RECT()对象指定客户区*/,0) = 使窗口绘图区无效\n不刷新背景
!combobox.update() = 重绘invalidate函数指定的区块
!combobox.setFocus() = 设置焦点 
!combobox.setPos(.(x坐标,y坐标,宽,高,插入位置,参数) = 调整窗口位置或排序,所有参数可选\n同时指定x,y坐标则移动位置\n同时指定宽高则改变大小\n指定插入位置(句柄或_HWND前缀常量)则调整Z序
!combobox.getPos() = 返回相对坐标,宽,高\nx,y,cx,cy=win.getPos(hwnd)
!combobox.orphanWindow() = 使控件脱离原来的窗口,可以显示在父窗口外面，\n但仍然显示在原来的位置，继续如影随形的跟随父窗口移动或改变大小,\n控件原来的固定边距等参数仍然有效
?win.ui.ctrl.combobox  =!combobox.
win.ui.ctrl.combobox() = 下拉框控件\n!combobox.
end intellisense***/