//pathGradientBrush 路径渐变刷子
import gdip.core;
namespace gdip;

class pathGradientBrush {

	ctor( path ){ 
		var err,handle = gdip.CreatePathGradientFromPath(path);
		if(err) return null,gdip.errMsg[brush]; 
		this.pBrush = handle; 
		
		..table.gc(this,"delete");
	}

	@_metaProperty//元表指向属性表
}
 
namespace pathGradientBrush {

	self.gdip = ..gdip;
	var gdip = gdip; 
	
	_metaProperty = ..util.metaProperty(  
		 
		setInterpolationColors = function( colors,points ){ 
			var count = #colors;
			if( count != #points ) error("参数中的数组长度错误",2)
			gdip.assert2( gdip.SetPathGradientPresetBlend(owner[["pBrush"]],{ int colors[] = colors },{ float points[] = points },#points) )
		};
		setFocusScales = function(x,y){
			gdip.assert2( gdip.SetPathGradientFocusScales(owner[["pBrush"]],x,y) );
		};
		delete = function(){
			if( owner[["pBrush"]] ){
				gdip.DeleteBrush(owner[["pBrush"]])
				owner[["pBrush"]] = null;
			}
		}
		
		//自动转换为API指针
		_topointer = function(){
			return owner[["pBrush"]];
		}
	)  
}
 
var $ = _dll;  
//http://msdn.microsoft.com/en-us/library/windows/desktop/ms534047(v=vs.85).aspx
/*intellisense(gdip)*/
CreatePathGradientFromPath = $.api("GdipCreatePathGradientFromPath","int(PTR path,pointer& polyGradient)")
SetPathGradientPresetBlend = $.api("GdipSetPathGradientPresetBlend","int(PTR brush,struct blend,struct positions,int count)") 
SetPathGradientFocusScales = $.api("GdipSetPathGradientFocusScales","int(PTR brush,float xScale,float yScale)")
/*end intellisense*/
 
/**intellisense()
gdip.pathGradientBrush = 渐变路径笔刷
gdip.pathGradientBrush(.(路径对象) = 参数是gdip.path对象
!gdippathGradientbrush.setInterpolationColors(.(插值颜色数组,插值位置数组) = 定义多色渐变\n数组元素都是数值,长度必须相等\n插值位置以小数表示百分比,开始必须为0表示外边界,最后一个必须为1
!gdippathGradientbrush.setFocusScales(.(x聚焦缩放,y聚焦缩放) = 设置聚焦缩放效果
!gdippathGradientbrush.delete() = 释放路径对象
gdip.pathGradientBrush()= !gdippathGradientbrush.
end intellisense**/
