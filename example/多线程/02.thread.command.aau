//2、调用线程命令
import win.ui;
/*DSG{{*/
var winform = ..win.form(text="线程命令";right=599;bottom=399)
winform.add(
edit={cls="edit";left=12;top=11;right=588;bottom=389;db=1;dl=1;dr=1;dt=1;edge=1;multiline=1;z=1}
)
/*}}*/

import thread.command;
var listener = thread.command();
listener.print = function( ... ){
    winform.edit.print( ... ) //将线程传过来的参数追加输出到文本框
} 

//创建工作线程,线程内错误信息默认输出到控制台
thread.invoke(

    function(hwnd){ 
    
        //必须在线程函数内部导入需要的库
        import thread.command;
        
        //调用界面线程的命令
        thread.command.print("hello world",1,2,3);
        
        //也可以用post方法异步调用线程命令,不会等待调用完成
        thread.command.post("print","hello world",1,2,3);
        
    },listener.hwnd
)

//这样写更方便,适合用于编写后台线程触发器之类的支持库
listener.invoke(
    function( hwndListener,... ){
        import thread.command;
        var notifier = thread.command.bind(hwndListener,1,,,,3 );
        
        notifier.print("正在努力执行线程.....") 
    },...
)

winform.show();
win.loopMessage(); 
