import win.ui;
import win.ui.menu;
/*DSG{{*/
var winform = ..win.form(text="aardio form";right=660;bottom=381;parent=...)
winform.add(
edit={cls="edit";left=19;top=14;right=641;bottom=363;edge=1;multiline=1;z=1}
)
/*}}*/

import wsock.tcp.client;
var tcpClient = wsock.tcp.client(); 

file = io.open("/test.rar","w+b");//注意io.open默认是文本方式写入的,b指定二进制模式
var readsCount = 0; 
 
UM_SOCK = 0x400/*_WM_USER*/ + 0x7B3;
tcpClient.asyncSelect(0x10/*_FD_CONNECT*/,UM_SOCK,winform.hwnd)
 
winform.wndproc = function(hwnd,message,wParam,lParam){

	select(message) {//判断消息类型
		case UM_SOCK  { 
			var hSocket = topointer(wParam);
			if( hSocket != tcpClient._handle ) return;
			
			var selectErr,selectEvent = ::HIWORD(lParam),::LOWORD(lParam);
			if (selectErr != 0) {
				winform.edit.print( "出错了");
				tcpClient.close();
			}
			
			select(selectEvent) {
				case 0x10/*_FD_CONNECT*/{
					tcpClient.asyncSelect(0x1/*_FD_READ*/)
					winform.edit.print("已连接")
				}	
				case 0x1/*_FD_READ*/{
					var recvbuf = tcpClient.recv(1024); //topointer(wParam) 
					var reads = #recvbuf
					if( reads>0 ) {   
						readsCount += reads;
						file.write( recvbuf );	
						winform.edit.print("已下载",math.size64(readsCount).format())
						return true; 
					} 
				}
			} 
		}    
	} 
}

tcpClient.connect("127.0.0.1",7510) //因为是异步套接字，这里不需要检查返回值 
tmid = winform.addtimer(
	1000/*毫秒*/,
	function(hwnd,msg,id,tick){//定时执行代码
		if(! tcpClient.send(" ") ){ 
			winform.edit.print("服务端已断开");
			tcpClient.asyncSelect(0,0);  
			tcpClient.close();
			file.close()
			return  false
		}
	}
);


winform.show(true) 
win.loopMessage();
return winform;
