//查询硬件信息

import console;
import win.guid;

Setupapi := raw.loadDll("Setupapi.dll")
SetupDiGetDeviceRegistryProperty = Setupapi.api("SetupDiGetDeviceRegistryProperty"
    ,"bool(addr deviceInfoSet,struct deviceInfoData,INT property,INT &dataType,string &propertyBuffer,INT propertyBufferSize,INT &requiredSize)" )

class SP_DEVINFO_DATA {
  INT cbSize;
  struct classGuid = ..win.guid();
  INT devInst;
  ADDR reserved;
}

var guidMedia = win.guid.fromString("{4d36e96c-e325-11ce-bfc1-08002be10318}");
var  hScsi  =  Setupapi.SetupDiGetClassDevs(/*guidMedia*/ ,  "PCI",  null,  4/*_DIGCF_ALLCLASSES*/ | 2/*_DIGCF_PRESENT*/);  // _DIGCF_PRESENT:只返回当前存在的设备

var adapterData = SP_DEVINFO_DATA()
adapterData.cbSize  =  raw.sizeof(adapterData);  

var idx = 0;
while(Setupapi.SetupDiEnumDeviceInfo(hScsi,idx,adapterData)){

    var ret,dataType,propertyBuffer,requiredSize = SetupDiGetDeviceRegistryProperty(hScsi,adapterData,0/*_SPDRP_DEVICEDESC*/,0,0,0,0);
    ret,dataType,propertyBuffer,requiredSize = SetupDiGetDeviceRegistryProperty(hScsi,adapterData,0/*_SPDRP_DEVICEDESC*/,0,requiredSize,requiredSize,0)
    console.log( propertyBuffer )
    idx ++;
}

Setupapi.SetupDiDestroyDeviceInfoList(hScsi)

console.pause()